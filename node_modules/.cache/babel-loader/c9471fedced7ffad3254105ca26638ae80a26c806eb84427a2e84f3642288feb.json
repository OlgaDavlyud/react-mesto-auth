{"ast":null,"code":"var _jsxFileName = \"/Users/olgadavlud/Desktop/Praktikum/react-mesto-auth/src/components/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const [cardName, setCardName] = useState('');\n  const [cardLink, setCardLink] = useState('');\n  useEffect(() => {\n    setCardName(\"\");\n    setCardLink(\"\");\n  }, [isOpen]);\n  function handleChangeCardName(evt) {\n    setCardName(evt.target.value);\n  }\n  function handleChangeCardLink(evt) {\n    setCardLink(evt.target.value);\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      name: cardName,\n      link: cardLink\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"add-card\",\n    buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"popup__input popup__input-name-card\",\n        type: \"text\",\n        name: \"name\",\n        id: \"name-card\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        value: cardName,\n        required: \"\",\n        minLength: 1,\n        maxLength: 30,\n        onChange: handleChangeCardName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error-visible name-card-error-visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"popup__input popup__input-link-image\",\n        type: \"url\",\n        name: \"link\",\n        id: \"link-image\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        value: cardLink,\n        required: \"\",\n        onChange: handleChangeCardLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error-visible link-image-error-visible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPlacePopup, \"KUVv/n9SV/JzEsSQyKNmQwUHNZI=\");\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useState","useEffect","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","_ref","_s","isOpen","onClose","onAddPlace","cardName","setCardName","cardLink","setCardLink","handleChangeCardName","evt","target","value","handleChangeCardLink","handleSubmit","preventDefault","name","link","title","buttonText","onSubmit","children","className","type","id","placeholder","required","minLength","maxLength","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olgadavlud/Desktop/Praktikum/react-mesto-auth/src/components/AddPlacePopup.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace}) {\n    const [cardName, setCardName] = useState('');\n    const [cardLink, setCardLink] = useState('');\n\n    useEffect(() => {\n      setCardName(\"\");\n      setCardLink(\"\");\n    }, [isOpen]);\n\n  function handleChangeCardName(evt) {\n    setCardName(evt.target.value);\n  }\n\n  function handleChangeCardLink(evt) {\n    setCardLink(evt.target.value);\n  }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        onAddPlace({\n          name: cardName,\n          link: cardLink\n        })\n    }\n\n    return(\n        <PopupWithForm\n        title=\"Новое место\"\n        name=\"add-card\"\n        buttonText=\"Создать\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onSubmit={handleSubmit}\n        >\n          <label className=\"popup__form-field\">\n            <input\n              className=\"popup__input popup__input-name-card\"\n              type=\"text\"\n              name=\"name\"\n              id=\"name-card\"\n              placeholder=\"Название\"\n              value={cardName}\n              required=\"\"\n              minLength={1}\n              maxLength={30}\n              onChange={handleChangeCardName}\n            />\n            <span className=\"popup__error-visible name-card-error-visible\" />\n          </label>\n          <label className=\"popup__form-field\">\n              <input\n                className=\"popup__input popup__input-link-image\"\n                type=\"url\"\n                name=\"link\"\n                id=\"link-image\"\n                placeholder=\"Ссылка на картинку\"\n                value={cardLink}\n                required=\"\"\n                onChange={handleChangeCardLink}\n              />\n              <span className=\"popup__error-visible link-image-error-visible\" />\n          </label>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}